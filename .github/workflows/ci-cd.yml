name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]  # CI sur les deux branches
  pull_request:
    branches: [ main, develop ]  # PR vers main ou develop

env:
  PYTHON_VERSION: '3.10'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov
        
    - name: Run tests
      env:
        SECRET_KEY: test-secret-key-for-ci
        DATABASE_URL: sqlite:///./test.db
      run: |
        python -m pytest tests/ -v --cov=. --cov-report=xml
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ github.ref_name }}
        path: coverage.xml

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/task-manager:${{ github.ref_name }}-${{ github.sha }}
          ${{ secrets.DOCKER_USERNAME }}/task-manager:${{ github.ref_name }}-latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Deploy to Staging
      run: |
        echo "ðŸš§ Deployment to staging environment"
        echo "Branch: develop"
        echo "Ready for staging deployment"

  deploy-production:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to Production  
      run: |
        echo "ðŸš€ Deployment to production environment"
        echo "Branch: main"
        echo "Production deployment ready"